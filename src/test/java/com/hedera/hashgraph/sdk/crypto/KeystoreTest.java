package com.hedera.hashgraph.sdk.crypto;

import com.hedera.hashgraph.sdk.crypto.ed25519.Ed25519PrivateKey;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;

class KeystoreTest {
    private static final String testKeyStr = "302e020100300506032b657004220420db484b828e64b2d8f12ce3c0a0e93a0b8cce7af1bb8f39c97732394482538e10";
    private static final String passphrase = "asdf1234";

    @Test
    @DisplayName("Keystore.fromStream returns correct key")
    void keystoreFromStream() throws IOException {
        // keystore file generated by hedera-sdk-js from `testKeyStr` and `passphrase`
        // NOT USED ANYWHERE
        final InputStream inputStream = KeystoreTest.class.getResourceAsStream("/test-keystore.bin");
        final Keystore keystore = Keystore.fromStream(inputStream, passphrase);

        final Ed25519PrivateKey privateKey = keystore.getEd25519();
        Assertions.assertEquals(privateKey.toString(), testKeyStr);
    }

    @Test
    @DisplayName("Keystore.toStream produces decodable value")
    void keystoreToStream() throws IOException {
        final Ed25519PrivateKey privateKey = Ed25519PrivateKey.fromString(testKeyStr);
        final Keystore keystore = new Keystore(privateKey);

        final ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        keystore.export(outputStream, passphrase);

        final Keystore keystore2 = Keystore.fromStream(new ByteArrayInputStream(outputStream.toByteArray()), passphrase);
        final Ed25519PrivateKey privateKey2 = keystore2.getEd25519();

        Assertions.assertEquals(privateKey2.toString(), testKeyStr);
    }
}
