plugins {
	// Auto extends code intelligence to generated code
	id 'idea'

	// Adds support for Java Library
	id 'java-library'

	// Adds support for Groovy (needed for Spock)
	id 'groovy'

	// Generates Java classes from the proto files
	id 'com.google.protobuf' version '0.8.8'

	// Keep your code spotless
	id 'com.diffplug.gradle.spotless' version '3.19.0'

	// Use the Error Prone compiler which wraps javac and
	// provides contextual analysis for common issues
	id 'net.ltgt.errorprone' version '0.7.1'

    // Fixes up `modulePath` because Gradle hasn't been taught about it yet and manual setup is a pain
    id "org.javamodularity.moduleplugin" version "1.4.1"

    // Performs quality checks using PMD
	id 'pmd'
}

repositories { jcenter() }

sourceCompatibility = 11
targetCompatibility = 11

dependencies {
	// Support for Protobufs
	implementation 'com.google.protobuf:protobuf-java:3.6.0'

	// Support for gRPC
	implementation 'io.grpc:grpc-netty-shaded:1.19.0'
	implementation 'io.grpc:grpc-protobuf:1.19.0'
	implementation 'io.grpc:grpc-stub:1.19.0'

	// Workaround for @javax.annotation.Generated
	// see: https://github.com/grpc/grpc-java/issues/3633
	implementation 'javax.annotation:javax.annotation-api:1.3.1'

	// Use the latest Groovy version for Spock testing
	testImplementation 'org.codehaus.groovy:groovy-all:2.5.6'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation 'junit:junit:4.12'
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.61'

	// Specify the version of Error Prone for error checking
	errorprone 'com.google.errorprone:error_prone_core:2.3.3'
}

protobuf {
	// Place generated classes in /gen for better integration
	// into the IDE
	generatedFilesBaseDir = "$projectDir/gen"

	// Download protoc from maven instead of depending on it existing on the
	// system path
	protoc { artifact = 'com.google.protobuf:protoc:3.6.0' }

	// Download protoc-gen-grpc-java from maven as well
	plugins { grpc { artifact = 'io.grpc:protoc-gen-grpc-java:1.19.0' } }

	generateProtoTasks {
		ofSourceSet('main').each { task ->
			// Activate gRPC plugin
			task.plugins { grpc {} }

			// Annotate all protoc generated classes with @Generated
			// https://github.com/protocolbuffers/protobuf/issues/42
			task.builtins { java { option 'annotate_code' } }
		}
	}
}

// Remove gen/ (generated code) on clean
clean { delete protobuf.generatedFilesBaseDir }

idea {
	module {
		// Marks as generated source roots so to make inspection
		// in IDEA nicer
		generatedSourceDirs += file('gen/main/java')
		generatedSourceDirs += file('gen/main/grpc')
	}
}

spotless {
	java { googleJavaFormat() }
	groovy { greclipse() }
	groovyGradle { greclipse() }
}

tasks.withType(JavaCompile).configureEach {
	// Listen to @Generated annotations and ignore those
	// files for analysis
	options.errorprone.disableWarningsInGeneratedCode = true
}
